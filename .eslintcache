[{"/Users/alexforeman/PracticeCoding/React/typinggame/src/index.js":"1","/Users/alexforeman/PracticeCoding/React/typinggame/src/App.js":"2","/Users/alexforeman/PracticeCoding/React/typinggame/src/reportWebVitals.js":"3","/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/WordReceiver.js":"4","/Users/alexforeman/PracticeCoding/React/typinggame/src/components/Typer.js":"5","/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/TimeScore.js":"6","/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/GameContainer.js":"7"},{"size":542,"mtime":1611607438319,"results":"8","hashOfConfig":"9"},{"size":355,"mtime":1612118542588,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611525093764,"results":"11","hashOfConfig":"9"},{"size":1719,"mtime":1612118362307,"results":"12","hashOfConfig":"9"},{"size":1324,"mtime":1612119477152,"results":"13","hashOfConfig":"9"},{"size":932,"mtime":1612118425930,"results":"14","hashOfConfig":"9"},{"size":1238,"mtime":1612118789478,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1fa5ee8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexforeman/PracticeCoding/React/typinggame/src/index.js",[],["33","34"],"/Users/alexforeman/PracticeCoding/React/typinggame/src/App.js",[],"/Users/alexforeman/PracticeCoding/React/typinggame/src/reportWebVitals.js",[],"/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/WordReceiver.js",["35","36","37"],"import React, { useState} from \"react\";\n// import axios from \"axios\";\n// import TimeScore from \"./TimeScore.js\"\n// import Typer from \"../components/Typer.js\"\n\n\nconst WordReceiver = (props) => {\n  // const [randWord, setRandWord] = useState(\"\");\n  const [challenge, setChallenge] = useState(\"easy\");\n  const [wordMin, setWordMin] = useState(3);\n  const [wordMax, setWordMax] = useState(5)\n\n// const beginGame = () => {\n//   selectDifficulty(challenge)\n//   getWord()\n// }\n\n  const selectDifficulty = () => {\n    if (challenge === \"easy\") {\n      setWordMin(3);\n      setWordMax(5)\n    } else if (challenge === \"medium\") {\n      setWordMin(5);\n      setWordMax(9);\n    } else if (challenge === \"hard\") {\n      setWordMin(7);\n      setWordMax(13);\n    }\n  };\n\n  // const getWord = () => {\n  //   axios\n  //     .get(\n  //       `https://api.wordnik.com/v4/words.json/randomWord?&minLength=${wordMin}&maxLength=${wordMax}&api_key=${api_key}`\n  //     )\n  //     .then((response) => {\n  //       setRandWord(response.data.word);\n  //     });\n  // };\n\n\n\n  return (\n    <>\n      <div id=\"settings\" className=\"settings\">\n        <form id=\"settings-form\" onChange={(e) => setChallenge(e.target.value)}>\n          <label>Set Difficulty</label>\n          <div className=\"selectionDiv\">\n            <select id=\"difficulty\">\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </div>\n        </form>\n      </div>\n\\      <h1>Word:</h1>\n      <h1>{props.randWord}</h1>\n      {/* <button onClick={() => beginGame, () => setClicked(true)}>Start</button> */}\n\n    </>\n  );\n};\n\nexport default WordReceiver;\n","/Users/alexforeman/PracticeCoding/React/typinggame/src/components/Typer.js",["38","39"],"/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/TimeScore.js",["40","41"],"import React, {useState, useEffect} from 'react';\n// import WordReceiver from './WordReceiver.js';\n// import Typer from \"../components/Typer.js\"\n\nconst TimeScore = (props) => {\n\n// const [seconds, setSeconds] = useState(10)\n// const [over, setOver] = useState(false)\n// const [paused, setPaused] = useState(true)\n\n// const countdown = () => {\n//      // if(paused || over) return;\n//      if(seconds === 0) setOver(true)\n//      else if (seconds > 0){\n//           setSeconds(seconds - 1 )\n//      }\n  \n// }\n\n\n// useEffect(() =>  {\n//      if(props.clicked) {\n//      const timerId = setInterval(() => countdown(), 1000)\n//      return () => clearInterval(timerId)\n//      }\n// })\n\n\n \n\n return (\n      <>\n       {/* <button onClick={() =>setPaused(!paused) }>{paused? \"Start\" : \"Pause\"}</button> */}\n      {props.seconds > 0? <h1>Time: {props.seconds}</h1> : <h1>Game Over</h1>}  \n\n \n   \n      </>\n )\n\n\n\n}\n\nexport default TimeScore ","/Users/alexforeman/PracticeCoding/React/typinggame/src/containers/GameContainer.js",["42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":17},{"ruleId":"49","severity":1,"message":"53","line":11,"column":10,"nodeType":"51","messageId":"52","endLine":11,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":18,"column":9,"nodeType":"51","messageId":"52","endLine":18,"endColumn":25},{"ruleId":"49","severity":1,"message":"55","line":10,"column":19,"nodeType":"51","messageId":"52","endLine":10,"endColumn":29},{"ruleId":"49","severity":1,"message":"56","line":11,"column":19,"nodeType":"51","messageId":"52","endLine":11,"endColumn":29},{"ruleId":"49","severity":1,"message":"57","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"58","line":1,"column":26,"nodeType":"51","messageId":"52","endLine":1,"endColumn":35},{"ruleId":"49","severity":1,"message":"59","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":14},{"ruleId":"49","severity":1,"message":"60","line":9,"column":10,"nodeType":"51","messageId":"52","endLine":9,"endColumn":16},{"ruleId":"49","severity":1,"message":"61","line":9,"column":18,"nodeType":"51","messageId":"52","endLine":9,"endColumn":27},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'wordMin' is assigned a value but never used.","Identifier","unusedVar","'wordMax' is assigned a value but never used.","'selectDifficulty' is assigned a value but never used.","'setWordMin' is assigned a value but never used.","'setWordMax' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'over' is assigned a value but never used.","'paused' is assigned a value but never used.","'setPaused' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]